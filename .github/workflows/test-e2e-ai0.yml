# 1.setup node env
# 2.make build and deploy all-in-one service
# 3.stop console service ,replace files and restart console service
# 4.run e2e cluster test

name: front-e2e-test

on: [push, pull_request]
# This ensures that previous jobs for the branch are canceled when the branch is updated. 
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
env:
  OPENV2X_EXTERNAL_IP: 127.0.0.1
  OPENV2X_REDIS_ROOT: password
  OPENV2X_MARIADB_ROOT: password
  OPENV2X_MARIADB_DANDELION: password
  OPENV2X_EMQX_ROOT: password
jobs:
  front-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
   
      - name: Get branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo $GITHUB_REF | cut -d'/' -f 3)"
      
      # - name: 制作镜像
      #   run: | 
      #     docker build -t openv2x/edgeview:temp .



      - name: deploy service
        run: | 
          branch_name=${{ steps.extract_branch.outputs.branch }}
          echo current version is ${branch_name}
      #     sudo rm -rf openv2x-aio-${branch_name}.tar.gz && wget https://openv2x.oss-ap-southeast-1.aliyuncs.com/deploy/${branch_name}/openv2x-aio-${branch_name}.tar.gz
      #     sudo rm -rf src && tar zxvf openv2x-aio-${branch_name}.tar.gz
      #     sudo sed -i "s/8084/8085/" src/deploy/docker-compose-pre.yaml && sudo sed -i "s/8084/8085/" src/deploy/docker-compose-service.yaml
      #     sed -i "s#openv2x/edgeview:latest#openv2x/edgeview:temp#" src/deploy/docker-compose-service.yaml
      #     cd src && chmod +x ./install.sh && sudo -E bash ./install.sh
      #     docker ps

      # - name: Install dependencies
      #   run: npm install
      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps
      # - name: Run Playwright tests
      #   run: npx playwright test
      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: e2e/playwright-report
      #     retention-days: 30
      # - name: pass or fail 
      #   run: |
      #     if [ -d "e2e/test-results/*/*.png" ]; then
      #     echo e2e-test fail
      #     exit 110 
      #     else
      #     echo e2e-test successfully
      #     fi

          
